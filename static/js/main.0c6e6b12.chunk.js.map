{"version":3,"sources":["components/Tuesday/TodoListTasks/TodoListTask/TodoListTask.module.css","components/Monday/Message/Message.module.css","components/Tuesday/TodoListHeader/TodoListHeader.module.css","components/Navbar/Navlink/NavLink.module.css","components/Monday/MyName/MyName.module.css","images/avatar1.jpg","components/Monday/Monday.module.css","components/Tuesday/Tuesday.module.css","components/Tuesday/TodoListTasks/TodoListTasks.module.css","components/Tuesday/TodoListFooter/TodoListFooter.module.css","components/Navbar/Navbar.module.css","components/Monday/MyName/MyName.tsx","components/Monday/Message/Message.tsx","components/Monday/Monday.tsx","components/Tuesday/TodoListHeader/TodoListHeader.tsx","components/Tuesday/TodoListTasks/TodoListTask/TodoListTask.tsx","components/Tuesday/TodoListTasks/TodoListTasks.tsx","components/Tuesday/TodoListFooter/TodoListFooter.tsx","components/Tuesday/Tuesday.tsx","components/Navbar/Navlink/NavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MyName","props","className","styles","myName","name","Message","message","src","avatar1","alt","commentBubble","userName","helloVisitor","time","timeAdded","Monday","zeroFirstFormat","value","useState","date","Date","getHours","getMinutes","getTime","mainContainer","TodoListHeader","isDisabled","setIsDisabled","error","setError","title","setTitle","onAddTaskClick","newTitle","addTask","inputClassname","inputText","todoListHeaderTitle","todoListNewTaskForm","type","placeholder","onKeyPress","e","key","onClick","disabled","TodoListTask","editMode","setEditMode","todoListTask","task","isDone","done","taskWrap","checked","autoFocus","onBlur","wordWrap","id","selector","deleteButton","onMouseDown","deleteTask","TodoListTasks","tasksElements","tasks","map","index","TodoListFooter","isHidden","setIsHidden","todoListFooter","changeFilter","Tuesday","priority","setTasks","filterValue","setFilterValue","taskId","tasksForTodolist","filter","t","todoList","newText","newTask","newTasks","removedId","Navlink","item","to","dayOfWeek","link","activeClassName","activeLink","Navbar","setActiveLink","activateLink","currentTarget","textContent","NavLinks","daysOfWeek","nav","App","style","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0c6e6b12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTask\":\"TodoListTask_todoListTask__1Y7NU\",\"done\":\"TodoListTask_done__251hI\",\"taskWrap\":\"TodoListTask_taskWrap__3bhTJ\",\"wordWrap\":\"TodoListTask_wordWrap__2c8gq\",\"selector\":\"TodoListTask_selector__Wff_O\",\"deleteButton\":\"TodoListTask_deleteButton__1bafv\",\"taskTime\":\"TodoListTask_taskTime__1ZUSA\",\"displayBlockNone\":\"TodoListTask_displayBlockNone__7twbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1oye5\",\"commentBubble\":\"Message_commentBubble__3VmqJ\",\"userName\":\"Message_userName__31smT\",\"helloVisitor\":\"Message_helloVisitor__3gKMD\",\"time\":\"Message_time__3-ANu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoListHeader\":\"TodoListHeader_TodoListHeader__2-zJQ\",\"todoListHeaderTitle\":\"TodoListHeader_todoListHeaderTitle__2MMjO\",\"todoListNewTaskForm\":\"TodoListHeader_todoListNewTaskForm__gJ6Nw\",\"todoList\":\"TodoListHeader_todoList__fEmhg\",\"todoListTask\":\"TodoListHeader_todoListTask__U_Vlt\",\"error\":\"TodoListHeader_error__3arFn\",\"inputText\":\"TodoListHeader_inputText__6OGgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavLink_nav__25y2c\",\"item\":\"NavLink_item__2CfjE\",\"activeLink\":\"NavLink_activeLink__1PdyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myName\":\"MyName_myName__1mgL_\"};","module.exports = __webpack_public_path__ + \"static/media/avatar1.1a286469.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Monday_mainContainer__3g18H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tuesday\":\"Tuesday_tuesday__1LDes\",\"todoList\":\"Tuesday_todoList__1C1g2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTask\":\"TodoListTasks_todoListTask__9x8kl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListFooter\":\"TodoListFooter_todoListFooter__yAUIz\",\"filter-active\":\"TodoListFooter_filter-active__2Utld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1nP-r\",\"item\":\"Navbar_item__3eTov\",\"activeLink\":\"Navbar_activeLink__2Iy_l\"};","import React from \"react\";\r\nimport styles from \"./MyName.module.css\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n}\r\n\r\nfunction MyName(props: PropsType) {\r\n    return (\r\n        <div className={styles.myName}>{props.name}</div>\r\n    );\r\n}\r\n\r\nexport default MyName;","import React from 'react';\nimport styles from './Message.module.css'\nimport avatar1 from \"../../../images/avatar1.jpg\"\n\ntype PropsType = {\n    name: string\n    timeAdded: any\n}\n\nfunction Message(props: PropsType) {\n  return (\n      <div className={styles.message}>\n          <img src={avatar1} alt=\"avatar\"/>\n          <div className={styles.commentBubble}>\n              <div className={styles.userName}>{props.name}</div>\n              <div className={styles.helloVisitor}>\n                  some message\n              </div>\n              <div className={styles.time}>{props.timeAdded}</div>\n          </div>\n      </div>\n  );\n}\n\nexport default Message;\n\n\n\n/*\n- создать компоненту, которая красиво будет выводить ваше ФИО (попрактикуйте пропсы!!! (<Message name=\"x\" text=\"y\"/>), их типизацию и module.css)\n- *** создать компоненту, которая будет выводить текст,  стилизованно как в телеграмме (имя, текст, время, уголок (загуглить/украсть с другого сайта/у друга))\n- нужно типизировать пропсы сразу, any - крайне нежелателен даже вначале, если не знаете как - пишем мне или на хэлп*/\n","import React, {useState} from 'react';\nimport MyName from \"./MyName/MyName\";\nimport Message from \"./Message/Message\";\nimport styles from './Monday.module.css'\n\nfunction Monday() {\n\nfunction zeroFirstFormat (value: any) {\n    if (value < 10) {\n        value = \"0\" + value;\n    }\n    return value;\n}\n\nfunction getTime () {\n    let date = new Date();\n    return `${zeroFirstFormat(date.getHours())}:${zeroFirstFormat(date.getMinutes())}`\n}\n\nlet [timeAdded, setTimeAdded] = useState(getTime())\n\n/*function changeTimeAdded(value: {() => time()}) {\n    setTimeAdded(value)\n}*/\n\n  return (\n    <div className={styles.mainContainer}>\n        <MyName name=\"Biryukov Saveliy-Georgiy Yurievich\"/>\n        <Message\n            name=\"Saveliy\"\n            timeAdded={timeAdded}\n        />\n    </div>\n  );\n}\n\nexport default Monday;\n","import React, {useState} from \"react\";\r\nimport styles from \"./TodoListHeader.module.css\";\r\n\r\ntype PropsType = {\r\n    addTask: (newText: string) => void\r\n}\r\n\r\nfunction TodoListHeader(props: PropsType) {\r\n\r\n    let [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    let [error, setError] = useState(false)\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n\r\n    /*function switchButtonStatus () {\r\n        if (title === \"\") {\r\n            setIsDisabled(true)\r\n        } else {\r\n            setIsDisabled(false)\r\n        }\r\n    };*/\r\n\r\n    function onAddTaskClick () {\r\n        let newTitle = title;\r\n        title = \"\";\r\n        props.addTask(newTitle);\r\n        setIsDisabled(true);\r\n        setError(false);\r\n        setTitle(\"\");\r\n    }\r\n\r\n    function onAddTaskKeyPress (e: any) {\r\n        if (e.key === \"Enter\") {\r\n            onAddTaskClick();\r\n        }\r\n    }\r\n        // const {error} = this.state;\r\n        const inputClassname = error ? styles.error : styles.inputText;\r\n        return (\r\n            <div className={styles.TodoListHeader}>\r\n                <h3 className={styles.todoListHeaderTitle}>What to Learn</h3>\r\n                <div className={styles.todoListNewTaskForm}>\r\n                        <input\r\n                            //ref={this.newTaskTitleRef}\r\n                            type=\"text\"\r\n                            placeholder=\"New task name\"\r\n                            // onInput={}\r\n                            className={inputClassname}\r\n                            onKeyPress={onAddTaskKeyPress}\r\n                            value={title}\r\n                        />\r\n                    <button\r\n                        onClick={onAddTaskClick}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default TodoListHeader;\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./TodoListTask.module.css\";\r\nimport {FilterValuesType} from \"../../Tuesday\";\r\nimport { TaskType } from \"../TodoListTasks\";\r\n\r\ntype PropsType = {\r\n    task: TaskType\r\n    deleteTask: (taskId: number) => void\r\n}\r\n\r\nfunction TodoListTask (props: PropsType) {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    //let [timeBlock, setTimeBlock] = useState(false)\r\n\r\n /*   function onIsDoneChanged (e:any) {\r\n        this.props.changeStatus(props.task.id, e.currentTarget.checked, props.task);\r\n    };*/\r\n\r\n   /* function onTitleChanged (e:any) {\r\n        props.changeTitle(props.task.id, e.currentTarget.value);\r\n    };*/\r\n\r\n    function deleteThisTask () {\r\n        props.deleteTask(props.task.id);\r\n    };\r\n\r\n  /*  function activateEditMode () {\r\n        setEditMode(true)\r\n    };\r\n*/\r\n    function deactivateEditMode () {\r\n        setEditMode(false)\r\n      //  setTimeBlock(false)\r\n    }\r\n\r\n    /*function showBlockTime () {\r\n        setTimeBlock(true)\r\n    }\r\n\r\n    function hideBlockTime () {\r\n        setTimeBlock(false)\r\n    }*/\r\n\r\n    /*function onPriorityChanged (e:any) {\r\n        props.changePriority(props.task.id, e.currentTarget.value);\r\n    }*/\r\n\r\n\r\n        const todoListTask = props.task.isDone === true ? styles.done : \"\";\r\n       // let blockTime = timeBlock === true ? styles.taskTime : styles.displayBlockNone;\r\n\r\n        return (\r\n            <div className={styles.todoListTask + \" \" + todoListTask}>\r\n                <div className={styles.taskWrap}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={props.task.isDone}\r\n                       // onChange={onIsDoneChanged}\r\n                    />\r\n                    {editMode\r\n                        ? <input\r\n                            type=\"text\"\r\n                            value={props.task.title}\r\n                            autoFocus={true}\r\n                            onBlur={deactivateEditMode}\r\n                            //onChange={onTitleChanged}\r\n                        />\r\n                        :\r\n                        <div className={styles.wordWrap}\r\n                            /* onMouseOver={showBlockTime}\r\n                             onMouseOut={hideBlockTime}*/\r\n                             //onClick={this.activateEditMode}\r\n                        >\r\n                            {props.task.id}-{props.task.title}-priority:\r\n                        </div>\r\n                    }\r\n                    <div>\r\n                        <select\r\n                            className={styles.selector}\r\n                            //value={props.task.priority}\r\n                           // onChange={onPriorityChanged}\r\n                        >\r\n                            <option>high</option>\r\n                            <option>medium</option>\r\n                            <option>low</option>\r\n                        </select>\r\n                    </div>\r\n                    <button\r\n                        className={styles.deleteButton}\r\n                        onMouseDown={deleteThisTask}>\r\n                        X\r\n                    </button>\r\n                </div>\r\n                {/*<div className={blockTime}>\r\n                    <div>created:\r\n                        {props.task.timeAdded}\r\n                    </div>\r\n                    <div>updated:\r\n                        {props.task.timeUpdated}</div>\r\n                    <div>finished:\r\n                        {props.task.timeFinished}</div>\r\n                </div>*/}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default TodoListTask;\r\n","import React from \"react\";\r\nimport styles from \"./TodoListTasks.module.css\";\r\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\r\n\r\nexport type TaskType = {\r\n    id: number,\r\n    title: string,\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    tasks: Array<TaskType>\r\n    deleteTask: (taskId: number) => void\r\n}\r\n\r\nfunction TodoListTasks(props: PropsType) {\r\n\r\n    let tasksElements = props.tasks.map((task, index) => {\r\n        return (\r\n            <TodoListTask\r\n                key={index}\r\n                task={task}\r\n                deleteTask={props.deleteTask}\r\n            />\r\n        )\r\n    });\r\n    return (\r\n        <div className={styles.todoListTask}>\r\n            {tasksElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListTasks;","import React, {useState} from \"react\";\r\nimport styles from \"./TodoListFooter.module.css\";\r\nimport {FilterValuesType} from \"../Tuesday\";\r\n\r\ntype PropsType = {\r\n    changeFilter: (value: FilterValuesType) => void\r\n}\r\n\r\nfunction TodoListFooter(props: PropsType) {\r\n    let [isHidden, setIsHidden] = useState(false)\r\n\r\n    function onHideFiltersClick () {\r\n            setIsHidden(true);\r\n    }\r\n\r\n    function onShowFiltersClick () {\r\n        setIsHidden(false);\r\n    }\r\n\r\n        return (\r\n            <div className={styles.todoListFooter}>\r\n                {!isHidden && <div>\r\n                    <button onClick={() => {props.changeFilter(\"all\")}}>All</button>\r\n                    <button onClick={() => {props.changeFilter(\"active\")}}>Active</button>\r\n                    <button onClick={() => {props.changeFilter(\"completed\")}}>Completed</button>\r\n                </div>\r\n                }\r\n                {!isHidden && <span onClick={onHideFiltersClick}>hide</span>}\r\n                {isHidden && <span onClick={onShowFiltersClick}>show</span>}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default TodoListFooter;\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Tuesday.module.css\";\r\nimport TodoListHeader from \"./TodoListHeader/TodoListHeader\";\r\nimport TodoListTasks from \"./TodoListTasks/TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter/TodoListFooter\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction Tuesday () {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        {id: 0, title: \"CSS\", isDone: true, priority: \"low\"},\r\n        {id: 1, title: \"JS\", isDone: true, priority: \"medium\"},\r\n        {id: 2, title: \"ReactJS\", isDone: false, priority: \"high\"},\r\n    ])\r\n\r\n    let [filterValue, setFilterValue] = useState<FilterValuesType>(\"all\")\r\n\r\n    let [taskId, setTaskId] = useState(2)\r\n\r\n    let tasksForTodolist = tasks;\r\n\r\n    if(filterValue===\"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone===false)\r\n    }\r\n    if(filterValue===\"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone===true)\r\n    }\r\n\r\n    function addTask (newText: string) {\r\n\r\n        let newTask = {\r\n            id: taskId++,\r\n            title: newText,\r\n            isDone: false,\r\n            priority: \"high\",\r\n        };\r\n\r\n        //let newTasks = this.state.tasks.push(newTask);\r\n        let newTasks = [...tasks, newTask];\r\n        setTasks(newTasks) //????\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilterValue(value)\r\n    }\r\n\r\n    function deleteTask (removedId : number) {\r\n        let newTasks = tasks.filter(t => t.id !== removedId);\r\n        setTasks(newTasks)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <div className={styles.todoList}>\r\n                    <TodoListHeader addTask={addTask}/>\r\n                    <TodoListTasks\r\n                        deleteTask={deleteTask}\r\n                        tasks={tasksForTodolist}\r\n                    />\r\n                    <TodoListFooter\r\n                        changeFilter={changeFilter}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Tuesday;\r\n","import React from 'react';\r\nimport styles from './NavLink.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {dayOfWeekType} from \"../Navbar\";\r\n\r\ntype PropsType = {\r\n    dayOfWeek: dayOfWeekType,\r\n    onClick: (e: any) => void\r\n}\r\n\r\nconst Navlink = (props: PropsType) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <NavLink to={props.dayOfWeek.link} activeClassName={styles.activeLink}\r\n                     onClick={props.onClick}>{props.dayOfWeek.title}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navlink;","import React, {useState} from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport Navlink from \"./Navlink/NavLink\";\r\n\r\nexport type dayOfWeekType = {\r\n    title: string,\r\n    link: string,\r\n    style: string\r\n}\r\n\r\ntype PropsType = {\r\n    daysOfWeek: Array<dayOfWeekType>\r\n}\r\n\r\nfunction Navbar(props: PropsType) {\r\n\r\n    let [activeLink, setActiveLink] = useState(\"\")\r\n\r\n    function activateLink (e: any) {\r\n        setActiveLink (e.currentTarget.textContent)\r\n    }\r\n\r\n        let NavLinks = props.daysOfWeek.map((dayOfWeek) => {\r\n            return (<Navlink\r\n                dayOfWeek={dayOfWeek}\r\n                onClick={activateLink}\r\n            />);\r\n        });\r\n        return (\r\n            <nav className={styles.nav}>\r\n                {NavLinks}\r\n            </nav>);\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\nimport './App.css';\nimport Monday from \"./components/Monday/Monday\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Tuesday from \"./components/Tuesday/Tuesday\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n\n    let [daysOfWeek, setDayOfWeek] = useState([\n            {title: \"monday\", link: \"/monday\", style: \"styles.activeLink\"},\n            {title: \"tuesday\", link: \"/tuesday\", style: \"styles.activeLink\"},\n        ]);\n\n  return (\n      <HashRouter>\n          <div className=\"App\">\n              <Navbar daysOfWeek={daysOfWeek}/>\n              <Route path=\"/monday\"\n                     render={() => <Monday/>}/>\n              <Route path=\"/tuesday\"\n                     render={() =>\n                         <Tuesday />}/>\n          </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}